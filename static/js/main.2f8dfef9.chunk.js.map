{"version":3,"sources":["context.jsx","reducer.jsx","Parallax.jsx","index.js","App.js"],"names":["Context","React","createContext","state","action","type","id","Date","now","title","payload","completed","map","todo","filter","Parralax","className","href","Name","ReactDOM","render","useReducer","reducer","JSON","parse","localStorage","getItem","dispatch","useState","useEffect","setItem","stringify","Provider","value","Parallax","document","getElementById"],"mappings":"8KAEaA,EAAUC,IAAMC,gB,WCFd,WAASC,EAAOC,GAC7B,OAAQA,EAAOC,MACb,IAAK,MACH,MAAM,GAAN,mBACKF,GADL,CAEE,CACEG,GAAIC,KAAKC,MACTC,MAAOL,EAAOM,QACdC,WAAW,KAIjB,IAAK,SACH,OAAOR,EAAMS,KAAI,SAAAC,GAKf,OAJIA,EAAKP,KAAOF,EAAOM,UACrBG,EAAKF,WAAaE,EAAKF,WAGlBE,KAGX,IAAK,SACH,OAAOV,EAAMW,QAAO,SAAAD,GAAI,OAAIA,EAAKP,IAAMF,EAAOM,WAEhD,QACE,OAAOP,ICqBEY,EA5CE,WACf,OACE,6BACE,yBAAKC,UAAU,YACb,6BAASA,UAAU,YACjB,wBAAIA,UAAU,cAAd,qBAGN,yBAAKA,UAAU,WACb,uBAAGA,UAAU,SAASC,KAAK,KACzB,0BAAMD,UAAU,aAChB,0BAAMA,UAAU,aAChB,0BAAMA,UAAU,aAChB,0BAAME,KAAK,aAJb,gBASF,6BACE,yBAAKF,UAAU,YACb,yBAAKA,UAAU,cACb,wBAAIA,UAAU,eAAd,UAGJ,yBAAKA,UAAU,YACb,yBAAKA,UAAU,cACb,wBAAIA,UAAU,eAAd,WAGJ,yBAAKA,UAAU,YACb,yBAAKA,UAAU,cACb,wBAAIA,UAAU,eAAd,SAGJ,yBAAKA,UAAU,YACb,yBAAKA,UAAU,cACb,wBAAIA,UAAU,eAAd,aCjCVG,IAASC,OAAO,mBCCD,WAAgB,IAAD,EACFC,qBAAWC,EAASC,KAAKC,MACjDC,aAAaC,QAAQ,WAFK,mBACrBvB,EADqB,KACdwB,EADc,OAGMC,mBAAS,IAHf,mBAmB5B,OAnB4B,UAK5BC,qBAAU,WACRJ,aAAaK,QAAQ,QAASP,KAAKQ,UAAU5B,MAC5C,CAACA,IAaF,kBAACH,EAAQgC,SAAT,CAAkBC,MAAO,CAAEN,aAgBzB,kBAACO,EAAD,SDrCU,MAASC,SAASC,eAAe,U","file":"static/js/main.2f8dfef9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Context = React.createContext()","export default function(state, action) {\r\n  switch (action.type) {\r\n    case 'add':\r\n      return [\r\n        ...state,\r\n        {\r\n          id: Date.now(),\r\n          title: action.payload,\r\n          completed: false,\r\n        }\r\n      ];\r\n    \r\n    case 'toggle':\r\n      return state.map(todo => {\r\n        if (todo.id === action.payload) {\r\n          todo.completed = !todo.completed;\r\n        }\r\n  \r\n        return todo;\r\n      });\r\n    \r\n    case 'remove': \r\n      return state.filter(todo => todo.id != action.payload);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import React from 'react';\r\n\r\nconst Parralax = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"par-body\">\r\n        <section className=\"parallax\">\r\n          <h1 className=\"par-header\">Parallax Effect</h1>\r\n        </section>\r\n    </div>\r\n    <div className=\"wrapper\">\r\n      <a className=\"parent\" href=\"#\">\r\n        <span className=\"children\"></span>\r\n        <span className=\"children\"></span>\r\n        <span className=\"children\"></span>\r\n        <span Name=\"children\"></span>\r\n        Neon Button\r\n      </a>\r\n    </div>\r\n\r\n    <div>\r\n      <div className=\"section1\">\r\n        <div className=\"container1\">\r\n          <h2 className=\"parr-header\">Fire</h2>\r\n        </div>\r\n      </div>\r\n      <div className=\"section1\">\r\n        <div className=\"container1\">\r\n          <h2 className=\"parr-header\">Water</h2>\r\n        </div>\r\n      </div>\r\n      <div className=\"section1\">\r\n        <div className=\"container1\">\r\n          <h2 className=\"parr-header\">Ice</h2>\r\n        </div>\r\n      </div>\r\n      <div className=\"section1\">\r\n        <div className=\"container1\">\r\n          <h2 className=\"parr-header\">Sand</h2>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Parralax;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n","import React, { useState, useEffect, useReducer } from 'react';\nimport TodoList from './TodoList';\nimport {Context} from './context';\nimport reducer from './reducer';\nimport Parallax from './Parallax';\n\nexport default function App() {\n  const [state, dispatch] = useReducer(reducer, JSON.parse(\n    localStorage.getItem('todos')));\n  const [todoTitle, setTodoTitle] = useState('');\n  \n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(state));\n  }, [state]);\n   \n  const addTodo = event => {\n    if (event.key === 'Enter') {\n      dispatch({\n        type: 'add',\n        payload: todoTitle,\n      })\n      setTodoTitle('');\n    }\n  };\n\n  return (\n    <Context.Provider value={{ dispatch }}>\n      {/* <div className=\"container\">\n        <h1>Todo app</h1>\n\n          <div className=\"input-field\">\n            <input \n              type=\"text\" \n              value={todoTitle}\n              onChange={event => setTodoTitle(event.target.value)}\n              onKeyPress={addTodo}\n            />\n            <label>Todo name</label>\n          </div>\n\n          <TodoList todos={state} />\n      </div> */}\n      <Parallax />\n    </Context.Provider>\n  );\n}"],"sourceRoot":""}